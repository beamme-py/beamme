name: Protected test suite (can access cubit secrets)

on:
  schedule:
    - cron: '0 04 * * *'
  push:
    branches:
      - main
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

env:
  CUBIT_DOWNLOAD_URL: https://f002.backblazeb2.com/file/cubit-downloads/Coreform-Cubit/Releases/Linux/Coreform-Cubit-2025.3%2B58709-Lin64.tar.gz

jobs:
  beamme-testing-all-dependencies:
    name: ubuntu-latest with all dependencies
    runs-on: ubuntu-latest
    environment:
      # Use the trusted environment only for PRs authored by an OWNER or MEMBER (no approval needed); all others use the untrusted environment (someone has to approve the workflow run).
      # Otherwise (scheduled or merge triggers) use the trusted environment (no approval needed).
      name: ${{github.event_name == 'pull_request_target' && (github.event.pull_request.author_association == 'OWNER' || github.event.pull_request.author_association == 'MEMBER') && 'cubit_secrets_trusted' || (github.event_name == 'pull_request_target' && 'cubit_secrets_untrusted' || 'cubit_secrets_trusted')}}
    container:
      image: ghcr.io/4c-multiphysics/4c:main
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          submodules: true
          # For PR runs, checkout PR code; otherwise fallback to default branch or ref
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
      - name: Setup cubit
        id: cubit
        uses: ./.github/actions/setup_cubit
        with:
          cubit_download_url: ${{ env.CUBIT_DOWNLOAD_URL }}
          cubit_email: ${{ secrets.CUBIT_EMAIL }}
          cubit_password: ${{ secrets.CUBIT_PASSWORD }}
      - name: Setup virtual python environment
        uses: ./.github/actions/setup_virtual_python_environment
      - name: Build ArborX geometric search
        uses: ./.github/actions/build_arborx_geometric_search
      - name: Run the test suite
        uses: ./.github/actions/run_tests
        with:
          source-command: "source python-workflow-venv/bin/activate"
          install-command: "-e .[cubitpy,dev,fourc]"
          additional-pytest-flags: "--4C --ArborX --CubitPy --cov-fail-under=93"
          cubit-root: ${{ steps.cubit.outputs.cubit_root }}
      - name: Upload test results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-${{ github.run_number }}
          path: ${{ env.PYTEST_TMPDIR }}
      - name: Coverage badge and report
        uses: ./.github/actions/coverage

  beamme-performance-testing:
    name: performance tests
    continue-on-error: true
    runs-on: ubuntu-latest
    environment:
      # Use the trusted environment only for PRs authored by an OWNER or MEMBER (no approval needed); all others use the untrusted environment (someone has to approve the workflow run).
      # Otherwise (scheduled or merge triggers) use the trusted environment (no approval needed).
      name: ${{github.event_name == 'pull_request_target' && (github.event.pull_request.author_association == 'OWNER' || github.event.pull_request.author_association == 'MEMBER') && 'cubit_secrets_trusted' || (github.event_name == 'pull_request_target' && 'cubit_secrets_untrusted' || 'cubit_secrets_trusted')}}
    container:
      image: ghcr.io/4c-multiphysics/4c:main
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          # For PR runs, checkout PR code; otherwise fallback to default branch or ref
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
      - name: Setup cubit
        id: cubit
        uses: ./.github/actions/setup_cubit
        with:
          cubit_download_url: ${{ env.CUBIT_DOWNLOAD_URL }}
          cubit_email: ${{ secrets.CUBIT_EMAIL }}
          cubit_password: ${{ secrets.CUBIT_PASSWORD }}
      - name: Setup virtual python environment
        uses: ./.github/actions/setup_virtual_python_environment
      - name: Run the test suite
        uses: ./.github/actions/run_tests
        with:
          install-command: ".[cubitpy,dev,fourc]"
          source-command: "source python-workflow-venv/bin/activate"
          additional-pytest-flags: "--performance-tests --exclude-standard-tests -s --no-cov"
          cubit-root: ${{ steps.cubit.outputs.cubit_root }}
      - name: Upload test results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-${{ github.run_number }}
          path: ${{ env.PYTEST_TMPDIR }}
