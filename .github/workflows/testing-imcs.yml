# Workflow for testing MeshPy
name: Test MeshPy on IMCS hosted runners

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

env:
  # Indicate the testing script, that it is performed on GitHub.
  TESTING_GITHUB: 1
  # Python executable and virtual environment name
  PYTHON_EXE: python
  PYTHON_VENV: python-testing-environment
  # Meshpy can interact with CubitPy. To perform the corresponding tests,
  # the following path has to be set
  CUBIT_ROOT: /imcs/public/compsim/opt/cubit-15.2
  # We provide the python executable via Spack
  SPACK_ACTIVATION_SCRIPT: /home_local/github-runner/testing_lib/spack/share/spack/setup-env.sh

jobs:
  meshpy-testing-imcs:
    name: MeshPy @ IMCS
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Test MeshPy
        env:
          # This ensures that the CubitPy test are run
          TESTING_GITHUB_CUBITPY: 1
        run: |
          whoami
          pwd
          MESHPY_PATH=$(pwd)
          echo "Value of MESHPY_FOUR_C_EXE: \"${MESHPY_FOUR_C_EXE}\""
          # Load the python interpreter
          . ${SPACK_ACTIVATION_SCRIPT}
          spack load python@3.12.1
          # Create the virtual environment
          ${PYTHON_EXE} -m venv ${PYTHON_VENV}
          source ${PYTHON_VENV}/bin/activate
          # We have to update pip, otherwise there is a bug in the compilation of the cython code
          pip install --upgrade pip
          # Install meshpy
          pip install .[CI-CD]
          # Check git configuration
          git config --list
          # Print information on the python environment
          python --version
          pip list
          # Run tests
          cd tests
          coverage run --rcfile=coverage.config testing_main.py
          coverage html
          coverage report
          coverage-badge -o htmlcov/coverage.svg
      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{github.job}}-${{github.run_number}}
          path: ${{github.workspace}}/tests/testing-tmp/

  performance-test:
    name: Performance tests
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Performance test
        run: |
          whoami
          pwd
          MESHPY_PATH=$(pwd)
          # Load the python interpreter
          . ${SPACK_ACTIVATION_SCRIPT}
          spack load python@3.12.1
          # Create the virtual environment
          ${PYTHON_EXE} -m venv ${PYTHON_VENV}
          source ${PYTHON_VENV}/bin/activate
          # We have to update pip, otherwise there is a bug in the compilation of the cython code
          pip install --upgrade pip
          # Install meshpy
          pip install .[CI-CD]
          # Print information on the python environment
          python --version
          pip list
          # Run performance tests
          cd tests
          python performance_testing.py
