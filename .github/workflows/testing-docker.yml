# Workflow for testing MeshPy on a Github hosted docker runner
name: Test the main MeshPy functionality on a GitHub hosted docker runner

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

env:
  # Indicate the testing script, that it is performed on GitHub.
  TESTING_GITHUB: 1
  # Some tests require the 4C executable to check if the created input file
  # works with 4C.
  MESHPY_FOUR_C_EXE: /home/user/4C/build/4C
  # Activate MPI oversubscribe per default, to test if we can run 4C tests with 4 cores
  OMPI_MCA_rmaps_base_oversubscribe: 1
  # For ArborX we need a Kokkos installation
  KOKKOS_DIR: /opt/4C-dependencies/lib/cmake/Kokkos
  # Python executable and virtual environment name
  PYTHON_EXE: python
  PYTHON_VENV: python-testing-environment

jobs:
  meshpy-code-check:
    name: Code check
    runs-on: self-hosted
    container:
      image: ghcr.io/ppraegla/4c:latest
      options: --user root
      volumes:
        - /home_local/github-runner/testing_lib/testfolder:/run/docker
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Create python virtual environment
        uses: ./.github/actions/config_python_venv
      - name: Test MeshPy
        run: |
          touch /run/docker/new
          # Activate the virtual environment
          source ${PYTHON_VENV}/bin/activate
          # Install MeshPy
          pip install -e .[CI-CD]
          black . --check --exclude="${PYTHON_VENV}" && exit 0
          # If we did not exit in the code check line, raise an error here
          exit 1
