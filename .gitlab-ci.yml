# Stages for the gitlab testing
stages:
  - test
  - performance-test
  - deploy


# Default variables for the jobs
variables:
    # Indicated the testing script, that it is performed on GitLab. In this
    # case all test have to pass.
    TESTING_GITLAB: 1

    # Some test require baci-release to check if the created input file
    # works with baci.
    BACI_BUILD: "/hdd/gitlab-runner/lib/baci-master/release"
    BACI_RELEASE: "$BACI_BUILD/baci-release"

    # Python executable and virtual environment name
    PYTHON_EXE: "python3"
    PYTHON_VENV: "python-testing-environment"

    # Meshpy can interact with cubitpy, to perform the corresponding tests,
    # the following paths have to be set
    CUBITPY_REPO: "/hdd/gitlab-runner/lib/cubitpy-master"
    BACI_PRE_EXODUS: "$BACI_BUILD/pre_exodus"
    CUBIT: "/imcs/public/compsim/opt/cubit-13.2"

    # For building the website.
    JEKYLL_ENV: production
  

# Test meshpy
meshpy-testing:
    stage: test
    script:
        - "whoami"
        - "pwd"
        - MESHPY_PATH=$(pwd)
        # Create the virtual environment
        - "${PYTHON_EXE} -m venv ${PYTHON_VENV}"
        - source "${PYTHON_VENV}/bin/activate"
        # We have to update pip, otherwise there is a bug in the compilation of the cython code
        - "pip install --upgrade pip"
        # Install meshpy
        - "pip install .[CI-CD]"
        # Install cubitpy
        - cd $CUBITPY_REPO
        - git pull
        - "pip install ."
        - cd $MESHPY_PATH
        # Print information on the python environment
        - "python --version"
        - "pip list"
        # Run tests
        - "cd tests"
        - "coverage run --rcfile=coverage.config testing_main.py"
        - "coverage html"
        - "coverage report"
        - coverage-badge -o htmlcov/coverage.svg
        # Check codestyle
        - "cd $MESHPY_PATH"
        - 'black . --check --exclude="${PYTHON_VENV}" && exit 0'
        # If we did not exit earlier, raise an error here
        - "exit 1"
    artifacts:
        paths:
          - tests/htmlcov/
        expire_in: 30 days
    tags:
        - "imcs-all"


# Performance tests.
meshpy-performance-testing:
    stage: performance-test
    script:
        - "whoami"
        - "pwd"
        - MESHPY_PATH=$(pwd)
        # Create the virtual environment
        - "${PYTHON_EXE} -m venv ${PYTHON_VENV}"
        - source "${PYTHON_VENV}/bin/activate"
        # We have to update pip, otherwise there is a bug in the compilation of the cython code
        - "pip install --upgrade pip"
        # Install meshpy
        - "pip install ."
        # Install cubitpy
        - cd $CUBITPY_REPO
        - git pull
        - "pip install ."
        - cd $MESHPY_PATH
        # Print information on the python environment
        - "python --version"
        - "pip list"
        # Run performance tests
        - "cd tests"
        - "python3 performance_testing.py"
    tags:
        - "imcs-all"
    allow_failure: true


# For non master branches test the website. The build can be viewed under GitLab CI/CD artifacts
website-test:
    stage: test
    script:
        - cd website
        - bundle exec jekyll build -d website-test
        - mv website-test ../
    artifacts:
        paths:
            - website-test
        expire_in: 30 days
    tags:
        - "imcs-all"
    except:
        refs:
            - master


# For the master branch add the coverage report and the website
pages:
    stage: deploy
    dependencies:
        - meshpy-testing
    script:
        - mkdir public
        - mkdir public/htmlcov
        - mv tests/htmlcov/ public/
        - cd website
        - bundle exec jekyll build -d public
        - cd public
        - mv * ../../public
    artifacts:
        paths:
            - public
        expire_in: 90 days
    tags:
        - "imcs-all"
    only:
        refs:
            - master
